FROM alpine:3.8

# Important!  Update this no-op ENV variable when this Dockerfile
# is updated with the current date. It will force refresh of all
# of the base images and things like `apt-get update` won't be using
# old cached versions when the Dockerfile is built.
ENV REFRESHED_AT=2019-02-11 \
    LANG=en_US.UTF-8 \
    HOME=/opt/app \
    PATH=/opt/app/go/bin:${PATH} \
    SHELL=/bin/sh \
    # Set this so that CTRL+G works properly \
    TERM=xterm \
    REPLACE_OS_VARS=true

RUN \
    # Create default user and home directory, set owner to default \
    mkdir -p ${HOME} && \
    mkdir -p ${HOME}/var/log && \
    mkdir -p ${HOME}/data && \
    adduser -s /bin/sh -u 1001 -G root -h ${HOME} -S -D default && \
    chown -R 1001:0 ${HOME} && \
    # Upgrade Alpine and base packages \
    apk --no-cache upgrade && \
    # Install necessary shared libs \
    apk add --no-cache \
      bash \
      ca-certificates \
      file-dev \
      git \
      go \
      g++ \
      imagemagick \
      imagemagick-dev \
      libgcc \
      libjpeg-turbo-dev \
      libpng-dev \
      libstdc++ \
      ncurses \
      openssl \
      tcpdump \
      tiff-dev \
      zlib && \
    chmod +s /usr/sbin/tcpdump && \
    # Update ca certificates \
    update-ca-certificates --fresh

RUN CGO_CPPFLAGS=-D__GLIBC__ go get -u gitlab.com/opennota/findimagedupes

USER default
WORKDIR /opt/app


# Define mount points.
VOLUME ["/opt/app/var/log"]

# Deploy the application into the container
ARG RELEASE_NAME=overseer
COPY ./tmp/artifacts/${RELEASE_NAME}.tar.gz ./
RUN tar xfz ${RELEASE_NAME}.tar.gz && \
    rm -f ${RELEASE_NAME}.tar.gz \

ENTRYPOINT ["bin/overseer"]
